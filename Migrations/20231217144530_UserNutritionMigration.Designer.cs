// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechroseDemo;

#nullable disable

namespace TechroseDemo.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20231217144530_UserNutritionMigration")]
    partial class UserNutritionMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechroseDemo.NutritionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caffeine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("caffeine")
                        .HasAnnotation("Relational:JsonPropertyName", "caffeine");

                    b.Property<long>("Calories")
                        .HasColumnType("bigint")
                        .HasColumnName("calories")
                        .HasAnnotation("Relational:JsonPropertyName", "calories");

                    b.Property<string>("Cholesterol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cholesterol")
                        .HasAnnotation("Relational:JsonPropertyName", "cholesterol");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("ServingSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serving_size")
                        .HasAnnotation("Relational:JsonPropertyName", "serving_size");

                    b.Property<string>("Sugars")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sugars")
                        .HasAnnotation("Relational:JsonPropertyName", "sugars");

                    b.Property<string>("TotalFat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("total_fat")
                        .HasAnnotation("Relational:JsonPropertyName", "total_fat");

                    b.HasKey("Id");

                    b.ToTable("nutritions");
                });

            modelBuilder.Entity("TechroseDemo.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birth_date")
                        .HasAnnotation("Relational:JsonPropertyName", "birth_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name")
                        .HasAnnotation("Relational:JsonPropertyName", "first_name");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hashed_password");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name")
                        .HasAnnotation("Relational:JsonPropertyName", "last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_number")
                        .HasAnnotation("Relational:JsonPropertyName", "phone_number");

                    b.Property<string>("SaltedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("salted_password");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TechroseDemo.UserNutritionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("MealTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("meal_time")
                        .HasAnnotation("Relational:JsonPropertyName", "meal_time");

                    b.Property<int>("NutritionId")
                        .HasColumnType("int")
                        .HasColumnName("nutrition_id")
                        .HasAnnotation("Relational:JsonPropertyName", "nutrition_id");

                    b.Property<double>("Portion")
                        .HasColumnType("float")
                        .HasColumnName("portion")
                        .HasAnnotation("Relational:JsonPropertyName", "portion");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasAnnotation("Relational:JsonPropertyName", "user_id");

                    b.HasKey("Id");

                    b.HasIndex("NutritionId");

                    b.HasIndex("UserId");

                    b.ToTable("user_nutritions");
                });

            modelBuilder.Entity("TechroseDemo.UserNutritionModel", b =>
                {
                    b.HasOne("TechroseDemo.NutritionModel", "NutritionModel")
                        .WithMany("UserNutritionModels")
                        .HasForeignKey("NutritionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechroseDemo.UserModel", "UserModel")
                        .WithMany("UserNutritionModels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NutritionModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("TechroseDemo.NutritionModel", b =>
                {
                    b.Navigation("UserNutritionModels");
                });

            modelBuilder.Entity("TechroseDemo.UserModel", b =>
                {
                    b.Navigation("UserNutritionModels");
                });
#pragma warning restore 612, 618
        }
    }
}
